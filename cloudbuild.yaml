steps:
  # Step 1: Build the Docker image using the default Dockerfile (named 'Dockerfile')
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/se489groupproject/secondary_repo_code:latest', '.']
    
  # Step 2: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/se489groupproject/secondary_repo_code:latest']
    
  # Step 3: Deploy the image to Google Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['run', 'deploy', 'se-489-group-project', 
           '--image', 'gcr.io/se489groupproject/secondary_repo_code:latest', 
           '--platform', 'managed', 
           '--region', 'us-central1', 
           '--allow-unauthenticated']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'

# Define the images built by this Cloud Build
images:
  - 'gcr.io/se489groupproject/secondary_repo_code:latest'

#INSTRUCTIONS
#Change se489groupproject to your project ID from the Google Cloud Console Project
#Change secondary_repo_code to the name of the image you want to deploy from the Docker
#Login to Google Cloud Console 
#pip install gcloud

#bash
#gcloud auth login

#bash
#gcloud config set project PROJECT_ID for me it was 
#gcloud config set project se489groupproject
#pip install --upgrade google-api-python-client
#tag docker image
#docker tag secondary_repo_code gcr.io/se489groupproject 

# ENABLE
# gcloud services enable cloudbuild.googleapis.com
# gcloud services enable run.googleapis.com
# gcloud services enable containerregistry.googleapis.com


